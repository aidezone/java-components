version: "3"

# es-head: http://127.0.0.1:9100/
# kibana: http://127.0.0.1:5601/
# minio: http://127.0.0.1:9000
# grafana: http://127.0.0.1:3000
# nacos: http://127.0.0.1:8848/nacos
# rocketmq: http://127.0.0.1:8080
# milvus-attu: http://127.0.0.1:8000


services:

  redis:
    image: redis:6.2.6
    container_name: redis6.2.6
    command: redis-server --appendonly yes --bind 0.0.0.0 --requirepass ${REDIS_PWD}
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/data
    environment:
      - TZ=Asia/Shanghai
    restart: on-failure

  mysql:
    image: mysql:8.0.31
    container_name: mysql
    command: 
      - "--default-authentication-plugin=mysql_native_password"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
      MYSQL_DATABASE: ${MYSQL_SERVICE_DB}
      MYSQL_USER: ${MYSQL_SERVICE_USER}
      MYSQL_PASSWORD: ${MYSQL_SERVICE_PASSWORD}
      LANG: C.UTF-8
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
      - ./nacos/mysql-schema.sql:/docker-entrypoint-initdb.d/nacos-mysql.sql
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ./etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ./minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.4.8
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ./milvus:/var/lib/milvus
      - ./milvus/conf/milvus.yaml:/milvus/configs/milvus.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  attu:
    container_name: attu
    image: zilliz/attu:latest
    environment:
      # HOST_URL: http://0.0.0.0:8000
      MILVUS_URL: milvus:19530
    ports:
      - "8000:3000"

  rocketmq-namesrv:
    image: apache/rocketmq:4.9.6
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    command: sh mqnamesrv

  rocketmq-broker:
    image: apache/rocketmq:4.9.6
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    environment:
      - NAMESRV_ADDR=rocketmq-namesrv:9876
    volumes:
      - ./rocketmq/broker.conf:/home/rocketmq/rocketmq-4.9.6/conf/broker.conf
    depends_on:
      - rocketmq-namesrv
    command: sh mqbroker -c /home/rocketmq/rocketmq-4.9.6/conf/broker.conf
  
  rocketmq-dashboard:
    image: apacherocketmq/rocketmq-dashboard:latest
    container_name: rocketmq-dashboard
    ports:
      - 8080:8080 
    environment:
      JAVA_OPTS: -Drocketmq.namesrv.addr=rocketmq-namesrv:9876
    depends_on:
      - rocketmq-namesrv
      - rocketmq-broker

  nacos:
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=${MYSQL_SERVICE_DB}
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=${MYSQL_SERVICE_USER}
      - MYSQL_SERVICE_PASSWORD=${MYSQL_SERVICE_PASSWORD}
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useUnicode=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
      - NACOS_AUTH_IDENTITY_KEY=2222
      - NACOS_AUTH_IDENTITY_VALUE=2xxx
      - NACOS_AUTH_TOKEN=SecretKey012345678901234567890123456789012345678901234567890123456789
    volumes:
      - ./nacos/standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   depends_on:
  #     - nacos
  #   restart: on-failure

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:latest
  #   ports:
  #     - 3000:3000
  #   restart: on-failure

  # es-node-1:
  #   image: elasticsearch:7.17.5
  #   container_name: es-node-1
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
  #     - "TZ=Asia/Shanghai"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     # nofile:
  #     #   soft: 65536
  #     #   hard: 65536
  #   ports:
  #     - "9200:9200"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "50m"
  #   volumes:
  #     - ./elasticsearch/es-node-1/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ./elasticsearch/es-node-1/plugins:/usr/share/elasticsearch/plugins
  #     - ./elasticsearch/es-node-1/data:/usr/share/elasticsearch/data
  #     - ./elasticsearch/es-node-1/log:/usr/share/elasticsearch/log

  # es-node-2:
  #   image: elasticsearch:7.17.5
  #   container_name: es-node-2
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
  #     - "TZ=Asia/Shanghai"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     # nofile:
  #     #   soft: 65536
  #     #   hard: 65536
  #   ports:
  #     - "9201:9200"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "50m"
  #   volumes:
  #     - ./elasticsearch/es-node-2/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ./elasticsearch/es-node-2/plugins:/usr/share/elasticsearch/plugins
  #     - ./elasticsearch/es-node-2/data:/usr/share/elasticsearch/data
  #     - ./elasticsearch/es-node-2/log:/usr/share/elasticsearch/log

  # es-node-3:
  #     image: elasticsearch:7.17.5
  #     container_name: es-node-3
  #     environment:
  #       - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
  #       - "TZ=Asia/Shanghai"
  #     ulimits:
  #       memlock:
  #         soft: -1
  #         hard: -1
  #       # nofile:
  #       #   soft: 65536
  #       #   hard: 65536
  #     ports:
  #       - "9202:9200"
  #     logging:
  #       driver: "json-file"
  #       options:
  #         max-size: "50m"
  #     volumes:
  #       - ./elasticsearch/es-node-3/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #       - ./elasticsearch/es-node-3/plugins:/usr/share/elasticsearch/plugins
  #       - ./elasticsearch/es-node-3/data:/usr/share/elasticsearch/data
  #       - ./elasticsearch/es-node-3/log:/usr/share/elasticsearch/log

  # kibana:
  #   container_name: kibana
  #   image: kibana:7.17.5
  #   volumes:
  #     - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - es-node-1
  #     - es-node-2
  #     - es-node-3


  # elasticsearch-head:
  #   image: wallbase/elasticsearch-head:6-alpine
  #   container_name: elasticsearch-head
  #   environment:
  #     TZ: 'Asia/Shanghai'
  #   ports:
  #     - '9100:9100'
  #   depends_on:
  #     - es-node-1
  #     - es-node-2
  #     - es-node-3


  # es-node:
  #   image: elasticsearch:7.17.5
  #   container_name: es-node
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
  #     - "TZ=Asia/Shanghai"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     # nofile:
  #     #   soft: 65536
  #     #   hard: 65536
  #   ports:
  #     - "9200:9200"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "50m"
  #   volumes:
  #     - ./elasticsearch/es-node/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  #     - ./elasticsearch/es-node/plugins:/usr/share/elasticsearch/plugins
  #     - ./elasticsearch/es-node/data:/usr/share/elasticsearch/data
  #     - ./elasticsearch/es-node/log:/usr/share/elasticsearch/log

  # kibana:
  #   container_name: kibana
  #   image: kibana:7.17.5
  #   volumes:
  #     - ./kibana/config/kibana-alone.yml:/usr/share/kibana/config/kibana.yml
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - es-node

  # elasticsearch-head:
  #   image: wallbase/elasticsearch-head:6-alpine
  #   container_name: elasticsearch-head
  #   environment:
  #     TZ: 'Asia/Shanghai'
  #   ports:
  #     - '9100:9100'
  #   depends_on:
  #     - es-node

